name: CI (Python cached) - template

on:
  # Tokens: __BRANCHES__ and __PATHS_IGNORE__ will be replaced by init_new_repo.ps1.
  # Default replacement examples (inline YAML):
  # __BRANCHES__ => [ main, dev, test ]
  # __PATHS_IGNORE__ => ['archive/**','background/**','Design/**','docs/**','**/*.md']
  push:
    branches: [ main, dev, test ]
    paths-ignore: 
      - 'archive/**'
      - 'background/**'
      - 'Design/**'
      - 'docs/**'
      - '**/*.md'
  pull_request:
    branches: [ main, dev, test ]
    paths-ignore: 
      - 'archive/**'
      - 'background/**'
      - 'Design/**'
      - 'docs/**'
      - '**/*.md'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: 'PYTHON_VERSION_PLACEHOLDER'

      - name: Install dependencies
        run: |
          python -m pip install -r requirements.txt

      - name: Run tests (quick lane)
        env:
          PYTEST_ADDOPTS: "--maxfail=1 -q"
        run: |
          pytest -q -m "not experiments and not tuning and not integration and not fda" -k "not parameter_search"
name: CI (Python cached) - template

on:
  # Tokens: __BRANCHES__ and __PATHS_IGNORE__ will be replaced by init_new_repo.ps1.
  # Default examples: __BRANCHES__ => [ main, dev, test ]
  # __PATHS_IGNORE__ => ['archive/**','background/**','Design/**','docs/**','**/*.md']
  push:
    branches: __BRANCHES__
    paths-ignore: __PATHS_IGNORE__
  pull_request:
    branches: __BRANCHES__
    paths-ignore: __PATHS_IGNORE__
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: 'PYTHON_VERSION_PLACEHOLDER'

      - name: Install dependencies
        run: |
          python -m pip install -r requirements.txt

      - name: Run tests (quick lane)
        env:
          PYTEST_ADDOPTS: "--maxfail=1 -q"
        run: |
          pytest -q -m "not experiments and not tuning and not integration and not fda" -k "not parameter_search"
name: CI (Python cached) - template

on:
  # These tokens are replaced by the init script. Until replaced the file is a template.
  # __BRANCHES__ default: [ main, dev, test ]
  # __PATHS_IGNORE__ default: - 'archive/**' ...
  push:
    branches: __BRANCHES__
    paths-ignore: __PATHS_IGNORE__
  pull_request:
    branches: __BRANCHES__
    paths-ignore: __PATHS_IGNORE__
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: 'PYTHON_VERSION_PLACEHOLDER'

      - name: Setup uv
        uses: astral-sh/setup-uv@v4

      - name: Cache uv cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/uv
          key: ${{ runner.os }}-uv-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-uv-

      - name: Install dependencies (uv)
        run: |
          uv pip install --system -r requirements.txt

      - name: Prepare artifacts folders
        run: |
          mkdir -p logs outputs

      - name: Show environment
        run: |
          python --version
          pip --version
          pip list

      - name: Run tests (quick lane)
        env:
          PYTEST_ADDOPTS: "--maxfail=1 -q"
        run: |
          pytest -q -m "not experiments and not tuning and not integration and not fda" -k "not parameter_search"

      - name: Upload test report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: pytest-results
          path: |
            outputs/test-results.xml
            logs/pytest_debug.log
          if-no-files-found: ignore
name: CI (Python cached) - template

on:
  push:
    branches: [ main, dev ]
  pull_request:
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 'PYTHON_VERSION_PLACEHOLDER'
      - name: Install
        run: |
          python -m pip install -r requirements.txt
      - name: Run tests
        run: |
          pytest -q
