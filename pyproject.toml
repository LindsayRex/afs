[tool.pytest.ini_options]
pythonpath = ["."]
testpaths = ["tests"]
addopts = [
    "--strict-markers",
    "--junitxml=outputs/test-results.xml",
    "--log-file=logs/pytest_debug.log",
    "--log-level=INFO",
    "--log-file-level=DEBUG",
    "--log-file-format=%(asctime)s - %(levelname)s - %(message)s",
    "--log-file-date-format=%Y-%m-%d %H:%M:%S",
    "--ignore=jax-docs",
  "--ignore=archive",
  "--ignore=background",
  "-m not optional",
  "-ra",
  "-q"
]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "experiments: marks tests as experiment tests (deselect with '-m \"not experiments\"')",
    "tuning: marks tests as parameter tuning tests (deselect with '-m \"not tuning\"')",
    "integration: marks tests as integration tests (deselect with '-m \"not integration\"')",
    "unit: marks tests as unit tests (deselect with '-m \"not unit\"')",
    "fda: marks tests as FDA compliance tests (deselect with '-m \"not fda\"')",
    "optional: opt-in tests that require large external data or long runtime"
]

# Mirror discovery behavior from legacy pytest.ini
norecursedirs = [
  "archive",
  "background",
  "backups",
  "logs",
  "outputs",
  ".venv",
  ".venv",
  "venv",
  "build",
  "dist",
  ".*"
]

# -----------------------------
# Pylint config (for Pylint 3.x)
# -----------------------------
[tool.pylint.main]
# Set this to your actual interpreter version (match your venv). Replace placeholder if needed.
py-version = "3.12"
init-hook = "import sys, pathlib; sys.path.insert(0, str(pathlib.Path.cwd()))"

# Regexes against FULL PATHS to exclude entire trees.
# These are robust across nested folders and OS paths.
ignore-paths = [
  "(^|.*/)(\\.venv)(/|$)",
  "(^|.*/)(\\.git)(/|$)",
  "(^|.*/)(__pycache__)(/|$)",
  "(^|.*/)(\\.pytest_cache)(/|$)",
  "(^|.*/)(\\.vscode)(/|$)",
  "(^|.*/)(\\.github)(/|$)",
  "(^|.*/)(jax-docs)(/|$)",
  "(^|.*/)(outputs)(/|$)",
  "(^|.*/)(archive)(/|$)",
  "(^|.*/)(background)(/|$)",
  "(^|.*/)(Design)(/|$)"
]

# File name patterns (regex) to skip
ignore-patterns = [
  "test_.*\\.py$",
  ".*_test\\.py$",
  "conftest\\.py$",
  ".*_old\\.py$",
  ".*_backup\\.py$",
  "find_python_envs\\.ps1$",
  "temp_settings\\.json$"
]

[tool.pylint.messages_control]
disable = [
  # Style / docstrings
  "C0103","C0114","C0115","C0116",
  # Refactoring
  "R0903","R0912","R0915",
  # Conventions that are noisy in this codebase
  "W0613","W0718","W0719",
  # Import/location rules that donâ€™t fit this project
  "C0413","C0415","W0611",
  # Size/shape knobs for scientific-style code
  "R0801","R0917","R0914"
]

[tool.pylint.format]
max-line-length = 120
max-module-lines = 1000

[tool.pylint.reports]
output-format = "text"
reports = false

[tool.pylint.similarities]
min-similarity-lines = 20
ignore-comments = true
ignore-docstrings = true
ignore-imports = true

[tool.pylint.design]
max-args = 12
max-locals = 25
max-returns = 8
max-branches = 20
max-statements = 80
max-parents = 8

[tool.pylint.variables]
additional-builtins = ["_"]
dummy-variables-rgx = "_+$|(_[a-zA-Z0-9_]*[a-zA-Z0-9]+?$)|dummy|^ignored_|^unused_"
[tool.pytest.ini_options]
pythonpath = ["."]
testpaths = ["tests"]
addopts = ["--junitxml=outputs/test-results.xml","-q"]

[tool.pylint.main]
py-version = "3.12"
init-hook = "import sys, pathlib; sys.path.insert(0, str(pathlib.Path.cwd()))"
