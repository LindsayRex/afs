{
  // ---- Python interpreter (your venv) ----
  "python.defaultInterpreterPath": "${workspaceFolder}\\.venv\\Scripts\\python.exe",

  // ---- Pyright/Pylance (Type checking only, no linting) ----
  // Moved to pyrightconfig.json for centralized management
  "python.analysis.typeCheckingMode": "basic",
  "python.analysis.diagnosticMode": "workspace",
  "python.analysis.includeFileSpecs": [
    "src/**/*.py",
    "tests/**/*.py"
  ],
  "python.analysis.exclude": [
    "**/archive/**",
    "**/background/**",
    "**/Design/**",
    "**/outputs/**",
    "**/logs/**",
    "**/qa_logs/**",
    "**/__pycache__/**",
    "**/.pytest_cache/**",
    "**/build/**",
    "**/dist/**",
    "**/.venv/**",
    "**/venv/**",
    "**/*.pyc",
    "**/.git/**"
  ],
  // Disable Pylance's built-in linting (let ruff handle this)
  "python.analysis.diagnosticSeverityOverrides": {
    "reportMissingImports": "none",
    "reportMissingTypeStubs": "none",
    "reportImportCycles": "none",
    "reportUnusedImport": "none",
    "reportUnusedClass": "none",
    "reportUnusedFunction": "none",
    "reportUnusedVariable": "none",
    "reportDuplicateImport": "none",
    "reportUnnecessaryIsInstance": "none",
    "reportUnnecessaryCast": "none",
    "reportUnnecessaryComparison": "none",
    "reportAssertAlwaysTrue": "none",
    "reportSelfClsParameterName": "none",
    "reportImplicitStringConcatenation": "none",
    "reportUndefinedVariable": "none",
    "reportUnboundVariable": "none",
    "reportInvalidStubStatement": "none",
    "reportIncompleteStub": "none",
    "reportUnsupportedDunderAll": "none",
    "reportUnusedCoroutine": "none"
  },
  "python.analysis.extraPaths": [
    "${workspaceFolder}/src"
  ],

  // ---- Ruff (Fast Python Linter) ----
  "ruff.enable": true,
  "ruff.lint.enable": true,
  "ruff.format.enable": true,
  // Use configuration from pyproject.toml
  "ruff.configuration": "${workspaceFolder}/pyproject.toml",

  // ---- Show all problems ----
  "problems.showCurrentInStatus": true,

  // ---- Pytest ----
  "python.testing.pytestEnabled": true,
  "python.testing.unittestEnabled": false,
  "python.testing.cwd": "${workspaceFolder}",
  "python.testing.pytestArgs": [
    "--tb=short",
    "--strict-markers",
    "--disable-warnings"
  ],

  // ---- Keep VS Code snappy ----
  "files.exclude": {
    "**/__pycache__/**": true,
    "**/*.pyc": true,
    "**/.venv/**": true,
    "**/venv/**": true,
    "**/build/**": true,
    "**/dist/**": true
  },

  "files.watcherExclude": {
    "**/.git/**": true,
    "**/__pycache__/**": true,
    "**/.venv/**": true,
    "**/venv/**": true,
    "**/archive/**": true,
    "**/background/**": true,
    "**/Design/**": true,
    "**/outputs/**": true,
    "**/logs/**": true,
    "**/qa_logs/**": true,
    "**/build/**": true,
    "**/dist/**": true
  },

  // ---- Terminal configuration ----
  "terminal.integrated.shellArgs.windows": ["-Command", "& '${workspaceFolder}\\.venv\\Scripts\\Activate.ps1'"]
}
